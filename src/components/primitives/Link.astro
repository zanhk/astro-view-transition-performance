---
export interface Props {
	href?: string;
	tag?: "a" | "button";
	size?: "xs" | "sm" | "md" | "lg";
	block?: boolean;
	style?: "primary" | "button" | "outline";
	icon?: string;
	class?: string;
	[x: string]: any;
}

export type LinkType = Props & {
	title?: string;
};

const {
	href,
	block,
	icon,
	size = "md",
	style = "primary",
	class: className,
	...rest
} = Astro.props as Props;

const sizes = {
	xs: "",
	sm: "px-4 py-2",
	md: "px-5 py-2.5 text-xl",
	lg: "px-8 py-3 text-2xl",
};

const Tag = Astro.props.tag || "a";

if (Tag === "a" && !href) {
	throw new Error("The `href` prop is required when using the `a` tag.");
}

const styles = {
	primary: "text-primary-800 hover:text-primary-600 transition-colors",
	button: "font-light bg-primary-400 text-white hover:bg-primary-500",
	outline: "hover:bg-primary-200 hover:text-white",
};
---

<div class:list={[style === "button" && "link"]}>
	<Tag
		href={href}
		class:list={[
			"cursor-pointer items-center transition-colors disabled:cursor-not-allowed duration-300 ease-in-out disabled:opacity-50 gap-2",
			block ? "flex" : "inline-flex",
			style != "primary" ? sizes[size] : null,
			style != "primary" ? "justify-center" : null,
			styles[style],
			className,
		]}
		{...rest}
	>
		<slot />
	</Tag>
</div>

<style>
	@supports (mask-image: paint(smooth-corners)) {
		.link {
			-webkit-mask: paint(squircle);
			mask: paint(squircle);
			--squircle-radius: 100px;
			--squircle-smooth: 0.9;
		}
	}
</style>
